AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-sam-dynamodb-api

  SAM Template for Skills API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.8
    Environment:
      Variables:
        TABLE_NAME:
          Ref: SkillsTable    

Resources:
  ApiResource:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

  DynamoDbFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: dynamodb/
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SkillsTable
      Events:
        DynamoDb:
          Type: Api
          Properties:
            Path: /Skills/{userid}
            Method: get
            RestApiId: !Ref ApiResource

  SkillsTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      AttributeDefinitions:
        - AttributeName: userid
          AttributeType: S
      KeySchema:
        - AttributeName: userid
          KeyType: HASH
      TableName: Skills

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DynamoDbApi:
    Description: "API Gateway endpoint URL for Prod stage for Skills API function"
    Value: !Sub "https://${ApiResource}.execute-api.${AWS::Region}.amazonaws.com/Prod/Skills/"
  DynamoDbFunction:
    Description: "Skills API Lambda Function ARN"
    Value: !GetAtt DynamoDbFunction.Arn
  DynamoDbFunctionIamRole:
    Description: "Implicit IAM Role created for Skills API function"
    Value: !GetAtt DynamoDbFunctionRole.Arn
